#N canvas 0 0 1284 681 10;
#X declare -path patch_editor_abs/reloaded;
#X declare -path iemguts;
#X declare -lib iemguts;
#X declare -path automatonism/patch_editor_abs;
#X obj 102 188 bng 15 250 50 0 \$0-open-quick-guide! empty <--QUICK-GUIDE 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 102 203 bng 15 250 50 0 \$0-open-manual! empty <--MANUAL 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 102 240 bng 15 250 50 0 \$0-open-modules! empty <--MENU 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 221 188 bng 15 250 50 0 \$0-save-s \$0-save-r <--SAVE!(ctrl+s) 17 7 0 10 #fcfcfc #00fc04 #000000;
#X obj 221 203 bng 15 250 50 0 \$0-open-reset-warning! empty <--RESET! 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 840 310 r MIDI_LEARN_OK;
#X obj 1037 134 s AUTOMATONISM_LOADED;
#X obj 1038 105 loadbang;
#X msg 802 355 -1;
#N canvas 0 22 450 300 CPU-load 0;
#X floatatom 118 256 0 0 0 0 - - - 0;
#X obj 118 168 cputime;
#X obj 118 28 loadbang;
#X obj 118 112 metro 1000;
#X msg 118 56 1;
#X floatatom 118 84 0 0 0 0 - - - 0;
#X obj 118 140 t b b;
#X obj 118 228 * 0.1;
#X obj 118 197 int;
#X text 163 84 <-- on/off;
#X obj 235 255 s \$0-CPU;
#X connect 0 0 10 0;
#X connect 1 0 8 0;
#X connect 2 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 6 0 1 0;
#X connect 6 1 1 1;
#X connect 7 0 0 0;
#X connect 8 0 7 0;
#X restore 2 148 pd CPU-load;
#X obj 1471 316 text define \$0-midi_mapping;
#X obj 1374 382 symbol \$0-callback;
#X obj 1457 538 r \$0-callback;
#X obj 1457 563 text insert \$0-midi_mapping;
#X obj 298 244 bng 15 250 50 0 empty empty view 17 7 0 10 #fcfcfc #000000 #000000;
#X msg 1473 286 clear \, click;
#X msg 1374 416 getinfo symbol \$1;
#X obj 299 262 bng 8 250 50 0 empty empty clear! 13 3 0 10 #fc0400 #000000 #000000;
#X msg 1247 510 clear;
#X obj 297 221 cnv 15 50 20 empty \$0-midi_in empty 1 12 0 10 #fce0c4 #404040 0;
#X obj 714 210 r playhead;
#N canvas 675 732 450 250 (subpatch) 0;
#X coords 0 1 100 -1 49 49 1 0 0;
#X restore 298 222 graph;
#X text 298 204 midimap;
#X obj 1160 678 s STOP-MORPH!;
#X obj 1158 620 r MIDI_LEARN;
#X obj 1158 645 select 1;
#X text 1251 638 stop morphing when midilearn;
#X obj 731 924 s ACTIVE_DOLLARZERO;
#N canvas 422 212 564 770 camomile_plugin_support 0;
#N canvas 2 544 450 300 param.change 0;
#X obj 55 43 r gui;
#X obj 55 65 route mouse;
#X obj 43 289 s camomile;
#X obj 43 242 pack f f, f 18;
#X msg 43 265 param change \$1 \$2;
#X obj 92 159 t b f, f 8;
#X obj 55 131 t b f, f 16;
#X obj 16 183 t b f;
#X msg 92 109 0;
#X obj 16 18 r camo.param.change;
#X msg 55 109 1;
#N canvas 0 83 156 140 once 0;
#X obj 15 84 t f b, f 8;
#X obj 78 84 f 0;
#X obj 15 19 inlet;
#X obj 60 19 inlet;
#X obj 15 106 outlet;
#X obj 60 41 f 1;
#X obj 15 62 spigot 0;
#X connect 0 0 4 0;
#X connect 0 1 1 0;
#X connect 1 0 6 1;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 5 0 6 1;
#X connect 6 0 0 0;
#X restore 16 159 pd once;
#N canvas 0 23 156 140 once 0;
#X obj 89 69 f 0;
#X obj 15 19 inlet;
#X obj 60 19 inlet;
#X obj 15 106 outlet;
#X obj 60 41 f 1;
#X obj 15 62 spigot 0;
#X obj 15 84 t b b, f 8;
#X connect 0 0 5 1;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X restore 92 211 pd once;
#X obj 55 87 sel 1 0, f 13;
#X connect 0 0 1 0;
#X connect 1 0 13 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 12 0;
#X connect 5 1 3 1;
#X connect 6 0 11 1;
#X connect 6 1 3 1;
#X connect 7 0 12 1;
#X connect 7 1 3 0;
#X connect 8 0 5 0;
#X connect 9 0 11 0;
#X connect 10 0 6 0;
#X connect 11 0 7 0;
#X connect 12 0 3 0;
#X connect 13 0 10 0;
#X connect 13 1 8 0;
#X restore 97 69 pd param.change;
#X obj 60 225 r MIDI_LEARN;
#X msg 59 294 gui redraw;
#X obj 57 332 s camomile;
#X obj 60 198 r MIDI_MAP_TO;
#X obj 58 168 r MIDI_MAP_FROM;
#X obj 58 264 t b;
#X text 58 130 refresh gui when midi map mode changed;
#X obj 56 463 r save;
#X text 139 527 from camomile plugin;
#X obj 331 202 r load;
#X obj 336 529 list append;
#X obj 334 597 s;
#X text 427 494 forward camomile plug messages to [reloaded] instances;
#X obj 89 576 s SAVE-S;
#X obj 56 543 t b b;
#X obj 371 320 delay 100;
#X obj 52 607 s camo_save;
#X obj 222 320 delay 100;
#X msg 391 362 loadbang;
#X obj 391 387 s \$1-this;
#X obj 368 29 r gui;
#X obj 368 51 route mouse;
#X obj 367 152 s camomile;
#X obj 368 76 change;
#X obj 368 101 select 1;
#X msg 368 126 program updated;
#X obj 355 230 r load_data;
#N canvas 0 50 450 250 (subpatch) 0;
#X text 0 0 plugdatainfo <?xml version="1.0" encoding="UTF-8"?> <plugdatainfo/>;
#X coords 0 1 100 -1 15 15 1 0 0;
#X restore 0 0 graph;
#X msg 433 558 symbol from_host.load-\$1;
#X obj 344 423 list split 2;
#X obj 342 452 unpack s s;
#X text -60 382 list statesave-1-bwl-osc-ss.txt bwl-osc-1 preset 36 78 68 0 3;
#X obj 351 298 v IS_CAMOMILE;
#X obj 328 272 t a b b;
#X obj 321 345 spigot;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 8 0 15 0;
#X connect 10 0 34 0;
#X connect 11 0 12 0;
#X connect 15 0 17 0;
#X connect 15 1 14 0;
#X connect 16 0 18 0;
#X connect 16 0 19 0;
#X connect 18 0 2 0;
#X connect 19 0 20 0;
#X connect 21 0 22 0;
#X connect 22 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 23 0;
#X connect 27 0 34 0;
#X connect 29 0 12 1;
#X connect 30 0 31 0;
#X connect 30 1 11 1;
#X connect 31 0 11 0;
#X connect 31 1 29 0;
#X connect 33 0 35 1;
#X connect 34 0 35 0;
#X connect 34 1 33 0;
#X connect 34 2 16 0;
#X connect 35 0 30 0;
#X restore 1414 715 pd camomile_plugin_support;
#X text 151 14 [RELOADED];
#X obj 98 102 cnv 15 248 85 empty \$0-active-rcv empty 20 12 0 14 #ccffcc #ccffcc 0;
#X obj 104 110 cnv 5 5 5 empty empty AUTOMATONISM 0 0 0 14 #fcfcfc #404040 0;
#X obj 212 110 cnv 5 5 5 empty empty [RELOADED]v4.1 0 0 0 12 #fcfcfc #404040 0;
#X floatatom 151 167 5 0 0 1 - \$0-CPU - 0;
#X text 162 150 CPU;
#X text 150 150 %;
#X obj 197 133 bng 50 250 50 0 \$0-midi_learn \$0-midi_learn-rcv LEARN 10 15 0 10 #fce0c0 #fce0c0 #000000;
#X obj 247 133 bng 50 250 50 0 \$0-midi_map_from \$0-midi_map_from-rcv FROM 14 15 0 10 #d8fcd8 #d8fcd8 #000000;
#X obj 297 133 bng 50 250 50 0 \$0-midi_map_to \$0-midi_map_to-rcv TO 20 15 0 10 #d8fcfc #d8fcfc #000000;
#X text 209 117 MIDI;
#X text 263 117 MAP;
#X text 309 117 MAP;
#X obj 1039 51 declare -path patch_editor_abs/reloaded;
#X obj 470 175 r \$0-target_patch;
#X text 153 297 enable dynamic patching in parent canvas;
#X obj 145 589 == \$0;
#X obj 494 578 t b;
#N canvas 83 78 801 749 \$0-modules 0;
#X obj 196 91 cnv 15 180 15 empty empty MODULATION: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 196 112 bng 15 250 50 0 \$0-create-basic-lfo! empty <--BASIC-LFO 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 41 cnv 15 740 45 empty empty MODULES 350 12 0 14 #90d4b0 #fcfcfc 0;
#X obj 10 91 cnv 15 180 15 empty empty OSCILLATORS: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 10 10 cnv 15 740 30 empty empty WELCOME-TO-AUTOMATONISM 300 12 0 14 #90d4b0 #fcfcfc 0;
#X obj 10 211 bng 15 250 50 0 \$0-create-2op-fm! empty <--2OPFM 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 382 91 cnv 15 180 15 empty empty SOUND-PROCESSORS: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 383 130 bng 15 250 50 0 \$0-create-hp-filter! empty <--HP-FILTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 150 bng 15 250 50 0 \$0-create-bp-filter! empty <--BP-FILTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 209 bng 15 250 50 0 \$0-create-bob-filter! empty <--BOB-FILTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 229 bng 15 250 50 0 \$0-create-formant! empty <--FORMANT 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 249 bng 15 250 50 0 \$0-create-bitcrush! empty <--BITCRUSH 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 268 bng 15 250 50 0 \$0-create-wavefold! empty <--WAVEFOLD 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 288 bng 15 250 50 0 \$0-create-phasor! empty <--PHASOR 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 308 bng 15 250 50 0 \$0-create-combfilter! empty <--COMBFILTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 328 bng 15 250 50 0 \$0-create-granular-delay! empty <--GRANULAR-DELAY 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 348 bng 15 250 50 0 \$0-create-millerverb! empty <--MILLERVERB 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 368 bng 15 250 50 0 \$0-create-stereo-delay! empty <--STEREO-DELAY 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 191 bng 15 250 50 0 \$0-create-slope! empty <--SLOPE(function-generator) 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 211 bng 15 250 50 0 \$0-create-adsr! empty <--ADSR 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 172 bng 15 250 50 0 \$0-create-decay! empty <--DECAY 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 231 bng 15 250 50 0 \$0-create-random-gates! empty <--RANDOM-GATES 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 251 bng 15 250 50 0 \$0-create-random-voltages! empty <--RANDOM-VOLTAGES 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 310 bng 15 250 50 0 \$0-create-vca! empty <--VCA 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 579 cnv 15 180 15 empty empty MACRO-STRUCTURAL-TOOLS: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 568 91 cnv 15 180 15 empty empty UTILITY-LOGIC-CLOCKS: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 10 536 cnv 15 180 15 empty empty SEQUENCERS: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 196 271 bng 15 250 50 0 \$0-create-s&h! empty <--S&H(sample&hold) 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 330 bng 15 250 50 0 \$0-create-lpg! empty <--LPG(lopass-gate) 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 371 bng 15 250 50 0 \$0-create-3way-xfade! empty <--3WAY-XFADE 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 391 bng 15 250 50 0 \$0-create-polarizer! empty <--POLARIZER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 410 bng 15 250 50 0 \$0-create-mixer2! empty <--MIXER2(2-channel) 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 449 bng 15 250 50 0 \$0-create-toggle-matrix! empty <--TOGGLE-MATRIX 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 171 bng 15 250 50 0 \$0-create-clock-multiply! empty <--CLOCK-MULTIPLY 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 191 bng 15 250 50 0 \$0-create-clock-divider-even! empty <--CLOCK-DIVIDER-EVEN 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 211 bng 15 250 50 0 \$0-create-clock-divider-odd! empty <--CLOCK-DIVIDER-ODD 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 231 bng 15 250 50 0 \$0-create-vc-counter! empty <--VC-COUNTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 251 bng 15 250 50 0 \$0-create-trigger-delay! empty <--TRIGGER-DELAY 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 310 bng 15 250 50 0 \$0-create-inverter! empty <--INVERTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 330 bng 15 250 50 0 \$0-create-scope! empty <--SCOPE 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 350 bng 15 250 50 0 \$0-create-slew! empty <--SLEW 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 370 bng 15 250 50 0 \$0-create-probability! empty <--PROBABILITY 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 390 bng 15 250 50 0 \$0-create-quantizer! empty <--QUANTIZER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 537 bng 15 250 50 0 \$0-create-manual-triggers! empty <--MANUAL-TRIGGERS 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 569 111 bng 15 250 50 0 \$0-create-clock! empty <--CLOCK 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 556 bng 15 250 50 0 \$0-create-8steps! empty <--8STEPS 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 576 bng 15 250 50 0 \$0-create-mega-sequencer! empty <--MEGA-SEQUENCER! 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 410 bng 15 250 50 0 \$0-create-4to1-switch! empty <--4TO1-SWITCH 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 334 bng 15 250 50 0 \$0-create-kick! empty <--KICK 17 7 0 10 #9898dc #000000 #000000;
#X obj 10 354 bng 15 250 50 0 \$0-create-snare! empty <--SNARE 17 7 0 10 #9898dc #000000 #000000;
#X obj 383 170 bng 15 250 50 0 \$0-create-ladder-filter! empty <--LADDER-FILTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 350 bng 15 250 50 0 \$0-create-xfade! empty <--XFADE 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 110 bng 15 250 50 0 \$0-create-lp-filter! empty <--LP-FILTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 111 bng 15 250 50 0 \$0-create-basic-osc! empty <--BASIC-OSC 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 131 bng 15 250 50 0 \$0-create-bwl-osc! empty <--BWL-OSC 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 151 bng 15 250 50 0 \$0-create-wtable! empty <--WTABLE 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 190 bng 15 250 50 0 \$0-create-karplus! empty <--KARPLUS 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 452 bng 15 250 50 0 \$0-create-env-follower! empty <--ENV-FOLLOWER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 251 bng 15 250 50 0 \$0-create-triad! empty <--TRIAD 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 570 599 bng 15 250 50 0 \$0-create-preset-manager! empty <--PRESET-MANAGER 17 7 0 10 #9898dc #000000 #000000;
#X obj 196 152 bng 15 250 50 0 \$0-create-ahr! empty <--ATTACK-HOLD-RELEASE(ahr) 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 596 bng 15 250 50 0 \$0-create-trigger-seq! empty <--TRIGGER-SEQ 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 431 bng 15 250 50 0 \$0-create-1to4-switch! empty <--1TO4-SWITCH 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 429 bng 15 250 50 0 \$0-create-mixer4! empty <--MIXER4(4-channel) 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 231 bng 15 250 50 0 \$0-create-trigons! empty <--TRIGONS 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 132 bng 15 250 50 0 \$0-create-sinebank! empty <--SINEBANK 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 534 bng 15 250 50 0 \$0-create-midi-in! empty <--MIDI-IN 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 595 cnv 15 180 15 empty empty ORGANELLE: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 196 514 cnv 15 180 15 empty empty MIDI: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 196 616 bng 15 250 50 0 \$0-create-organelle-knobs! empty <--ORGANELLE-KNOBS 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 636 bng 15 250 50 0 \$0-create-organelle-keyboard! empty <--ORGANELLE-KEYBOARD! 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 656 bng 15 250 50 0 \$0-create-organelle-aux! empty <--ORGANELLE-AUX 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 466 bng 15 250 50 0 \$0-create-pitchshifter! empty <--PITCHSHIFTER 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 10 312 bng 15 250 50 0 \$0-create-polyfm! empty <--POLYFM 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 569 270 bng 15 250 50 0 \$0-create-trigger-train! empty <--TRIGGER-TRAIN 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 10 271 bng 15 250 50 0 \$0-create-pd-303! empty <--PD-303 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 10 291 bng 15 250 50 0 \$0-create-polysynth! empty <--POLYSYNTH 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 570 658 bng 15 250 50 0 \$0-create-random-time-manager! empty <--RANDOM-TIME-MANAGER 17 7 0 10 #9898dc #000000 #000000;
#X obj 196 574 bng 15 250 50 0 \$0-create-midi-out! empty <--MIDI-OUT 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 196 676 bng 15 250 50 0 \$0-create-organelle-output! empty <--ORGANELLE-OUTPUT 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 569 472 bng 15 250 50 0 \$0-create-audio-recorder! empty <--AUDIO-RECORDER 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 10 416 bng 15 250 50 0 \$0-create-noise! empty <--NOISE 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 436 bng 15 250 50 0 \$0-create-looper! empty <--LOOPER 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 569 494 bng 15 250 50 0 \$0-create-multitrack-recorder! empty <--MULTITRACK-RECORDER 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 383 408 bng 15 250 50 0 \$0-create-overdrive! empty <--OVERDRIVE 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 383 427 bng 15 250 50 0 \$0-create-filterbank! empty <--PRESET-FILTERBANK 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 383 446 bng 15 250 50 0 \$0-create-megaverb! empty <--MEGAVERB 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 569 515 bng 15 250 50 0 \$0-create-external-audio! empty <--EXTERNAL-AUDIO 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 383 388 bng 15 250 50 0 \$0-create-chorus! empty <--CHORUS 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 190 bng 15 250 50 0 \$0-create-analog-filter! empty <--ANALOG-FILTER 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 383 485 bng 15 250 50 0 \$0-create-compressor! empty <--COMPRESSOR 17 7 0 10 #9898dc #000000 #000000;
#X obj 10 633 bng 15 250 50 0 \$0-create-ratchet-seq! empty <--RATCHET-SEQ 17 7 0 10 #9898dc #000000 #000000;
#X obj 10 456 bng 15 250 50 0 \$0-create-sampler! empty <--SAMPLER 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 10 615 bng 15 250 50 0 \$0-create-gate-seq! empty <--GATE-SEQ 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 496 bng 15 250 50 0 \$0-create-chord-synth! empty <--CHORD-SYNTH 17 7 0 10 #9898dc #000000 #000000;
#X obj 383 505 bng 15 250 50 0 \$0-create-channel-eq! empty <--CHANNEL-EQ 17 7 0 10 #9898dc #000000 #000000;
#X obj 383 563 bng 15 250 50 0 \$0-create-audiofreeze! empty <--AUDIOFREEZE 17 7 0 10 #9898dc #000000 #000000;
#X obj 196 290 cnv 15 180 15 empty empty VCA/MIXERS: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 570 619 bng 15 250 50 0 \$0-create-param-nudge! empty <--PARAM-NUDGE 17 7 0 10 #9898dc #000000 #000000;
#X obj 570 639 bng 15 250 50 0 \$0-create-time-manager! empty <--TIME-MANAGER 17 7 0 10 #9898dc #000000 #000000;
#X obj 10 395 bng 15 250 50 0 \$0-create-percussion! empty <--PERCUSSION 17 7 0 10 #9898dc #000000 #000000;
#X obj 10 375 bng 15 250 50 0 \$0-create-hihat! empty <--HIHAT 17 7 0 10 #9898dc #000000 #000000;
#X obj 196 489 bng 15 250 50 0 \$0-create-random-mixer! empty <--RANDOM-MIXER 17 7 0 10 #9898dc #000000 #000000;
#X obj 10 516 bng 15 250 50 0 \$0-create-algomatrix! empty <--ALGOMATRIX 17 7 0 10 #9898dc #000000 #000000;
#X obj 383 523 bng 15 250 50 0 \$0-create-vintageverb! empty <--VINTAGEVERB 17 7 0 10 #9898dc #000000 #000000;
#X obj 383 543 bng 15 250 50 0 \$0-create-starlight! empty <--STARLIGHT 17 7 0 10 #9898dc #000000 #000000;
#X obj 383 583 bng 15 250 50 0 \$0-create-tremolo! empty <--TREMOLO 17 7 0 10 #9898dc #000000 #000000;
#X obj 569 557 bng 15 250 50 0 \$0-create-manual-toggle! empty <--MANUAL-TOGGLE 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 570 678 bng 15 250 50 0 \$0-create-macro-control! empty <--MACRO-CONTROL(for\ host\ plugin) 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 382 611 cnv 15 180 15 empty empty EXTRAS: 10 8 0 12 #9898dc #fcfcfc 0;
#X obj 569 131 bng 15 250 50 0 \$0-create-playhead! empty <--PLAYHEAD(Camomile/Plugdata) 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 196 554 bng 15 250 50 0 \$0-create-midi-polyin! empty <--MIDI-POLY.IN 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 10 671 bng 15 250 50 0 \$0-create-euklid! empty <--EUKLID\ (Mike\ Moreno) 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 569 291 bng 15 250 50 0 \$0-create-swing! empty <--SWING 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 10 171 bng 15 250 50 0 \$0-create-graphic-osc! empty <--GRAPHIC-OSC 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 10 651 bng 15 250 50 0 \$0-create-euclid777! empty <--EUCLID777 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 570 698 bng 15 250 50 0 \$0-create-macro-xy-control! empty <--MACRO-XY-CONTROL 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 10 476 bng 15 250 50 0 \$0-create-extra-sampler! empty <--EXTRA-SAMPLER 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 10 691 bng 15 250 50 0 \$0-create-seqtable! empty <--SEQTABLE 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 569 151 bng 15 250 50 0 \$0-create-abl-link! empty <--ABL-LINK(needs\ abl_link~) 17 7 0 10 #faff00 #000000 #000000;
#X obj 10 61 cnv 15 740 25 empty empty (PRESS\ "ESC"\ TO\ CLOSE\ /\ REOPEN\ THIS\ WINDOW) 40 12 0 10 #90d4b0 #fcfcfc 0;
#N canvas 207 284 582 127 colors 0;
#X text 36 70 modules with YELLOW buttons need externals, f 43;
#X text 36 18 modules introduced with Automatonism v2.0 have GREEN buttons;
#X text 36 35 modules introduced with Automatonism v3.0 have PURPLE buttons, f 63;
#X text 36 53 modules introduced with Automatonism [RELOADED] v4.1 have BROWN buttons, f 72;
#X obj 19 38 bng 15 250 50 0 empty empty empty 17 7 0 10 #9898dc #000000 #000000;
#X obj 19 21 bng 15 250 50 0 empty empty empty 17 7 0 10 #90d4b0 #000000 #000000;
#X obj 19 55 bng 15 250 50 0 empty empty empty 17 7 0 10 #c4a0a0 #000000 #000000;
#X obj 19 72 bng 15 250 50 0 empty empty empty 17 7 0 10 #faff00 #000000 #000000;
#X restore 389 725 pd colors;
#X obj 211 470 cnv 12 120 12 empty empty empty 20 12 0 10 #ff8300 #404040 0;
#X obj 196 469 bng 15 250 50 0 \$0-create-maestro4! empty <--MAESTRO4(dac~) 17 7 0 10 #fcfcfc #000000 #000000;
#X restore 364 775 pd \$0-modules;
#N canvas 526 265 1119 718 open_modules 0;
#X obj 31 8 inlet;
#X obj 340 264 delay 100;
#X obj 313 241 t b b;
#X msg 340 295 editmode 1;
#X obj 340 320 s \$1-this;
#X msg 316 346 vis 1;
#X obj 316 371 s pd-\$0-modules;
#X msg 295 65 1;
#X obj 295 90 s \$0-modules_menu_opened;
#X obj 283 165 r \$0-modules_menu_opened;
#X obj 282 192 select 0 1;
#X msg 256 344 vis 0;
#X obj 82 228 r \$0-esc-active;
#X obj 140 370 savestate;
#X obj 84 268 t f f;
#X obj 136 332 list;
#X msg 139 302 esc-active \$1;
#X obj 140 395 list trim;
#X obj 140 420 route esc-active;
#X obj 265 530 s \$0-esc-active-rcv;
#X obj 364 36 r \$0-open-modules!;
#X obj 43 517 s \$0-open-modules!;
#X obj 25 159 v \$0-modules_menu_opened;
#X obj 26 188 select 0 1;
#X msg 67 228 0;
#X obj 656 60 r \$0-open-palette!;
#X obj 498 659 s pd-\$0-palette;
#X obj 656 144 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 119 17 r \$0-esc-active;
#X obj 53 78 select 1 2;
#X obj 477 202 s \$0-open-palette!;
#X obj 674 299 list prepend 0;
#X obj 658 216 t f b;
#X obj 724 249 v IS_PLUGDATA;
#X obj 667 354 route 0 1;
#X obj 22 45 list prepend 0;
#X obj 202 475 f 1;
#X obj 279 438 loadbang;
#X obj 477 248 f \$0;
#X obj 477 273 s OPENPALETTE;
#X obj 612 440 select 0 1;
#X msg 571 629 vis 1;
#X msg 497 621 vis 0, f 7;
#X obj 656 550 s IS_THERE_A_PALETTE?;
#X obj 571 604 spigot 1;
#X obj 608 510 t b b b;
#X msg 612 567 1;
#X obj 658 579 r YES_THERE_IS!;
#X msg 658 604 0;
#X obj 39 116 delay 100;
#X connect 0 0 35 0;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 2 1 1 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 10 1 2 0;
#X connect 11 0 6 0;
#X connect 12 0 14 0;
#X connect 13 0 17 0;
#X connect 13 1 15 0;
#X connect 14 1 16 0;
#X connect 15 0 13 0;
#X connect 16 0 15 1;
#X connect 17 0 18 0;
#X connect 18 0 36 0;
#X connect 20 0 7 0;
#X connect 22 0 23 0;
#X connect 23 0 21 0;
#X connect 23 1 11 0;
#X connect 23 1 24 0;
#X connect 24 0 8 0;
#X connect 25 0 27 0;
#X connect 27 0 32 0;
#X connect 28 0 35 1;
#X connect 29 0 49 0;
#X connect 29 1 30 0;
#X connect 29 1 38 0;
#X connect 31 0 34 0;
#X connect 32 0 31 0;
#X connect 32 1 33 0;
#X connect 33 0 31 1;
#X connect 34 0 40 0;
#X connect 35 0 29 0;
#X connect 36 0 19 0;
#X connect 37 0 36 0;
#X connect 38 0 39 0;
#X connect 40 0 42 0;
#X connect 40 1 45 0;
#X connect 41 0 26 0;
#X connect 42 0 26 0;
#X connect 44 0 41 0;
#X connect 45 0 44 0;
#X connect 45 1 43 0;
#X connect 45 2 46 0;
#X connect 46 0 44 1;
#X connect 47 0 48 0;
#X connect 48 0 44 1;
#X connect 49 0 22 0;
#X restore 94 726 pd open_modules;
#X text 213 607 appui sur la touche ESC pour faire apparaitre le menu MODULES, f 21;
#X obj 100 663 sel 27;
#X obj 733 831 change;
#X obj 911 721 r ACTIVE_DOLLARZERO;
#X msg 855 826 set \$1;
#X obj 745 723 loadbang;
#X text 393 220 iemguts;
#N canvas 1003 228 313 360 dynamic_patching_stuff 0;
#N canvas 0 57 1920 1023 oscillators 0;
#X obj 24 9 module_create \$0 \$1 basic-osc;
#X obj 24 42 module_create \$0 \$1 bwl-osc;
#X obj 31 119 module_create \$0 \$1 2op-fm;
#X obj 25 142 module_create \$0 \$1 karplus;
#X obj 24 166 module_create \$0 \$1 trigons;
#X obj 33 214 module_create \$0 \$1 kick;
#X obj 28 242 module_create \$0 \$1 snare;
#X obj 30 267 module_create \$0 \$1 noise;
#X obj 29 292 module_create \$0 \$1 polysynth;
#X obj 29 313 module_create \$0 \$1 polyfm;
#X obj 31 337 module_create \$0 \$1 pd-303;
#X obj 31 360 module_create \$0 \$1 looper;
#X obj 30 382 module_create \$0 \$1 sampler;
#X obj 30 434 module_create \$0 \$1 chord-synth;
#X obj 30 459 module_create \$0 \$1 complex-percussion;
#X obj 30 483 module_create \$0 \$1 complex-kick;
#X obj 30 507 module_create \$0 \$1 complex-snare;
#X obj 30 532 module_create \$0 \$1 hihat;
#X obj 286 2 module_create \$0 \$1 algomatrix;
#X obj 27 66 module_create \$0 \$1 wtable;
#X obj 32 189 module_create \$0 \$1 triad;
#X obj 30 408 module_create \$0 \$1 percussion;
#N canvas 0 50 450 250 (subpatch) 0;
#X text 0 0 plugdatainfo <?xml version="1.0" encoding="UTF-8"?> <plugdatainfo/>;
#X coords 0 1 100 -1 15 15 1;
#X restore 0 0 graph;
#X obj 27 91 module_create \$0 \$1 graphic-osc;
#X restore 37 31 pd oscillators;
#N canvas 0 23 992 769 sound-processors 0;
#X obj 31 47 module_create \$0 \$1 lp-filter;
#X obj 31 71 module_create \$0 \$1 ladder-filter;
#X obj 31 93 module_create \$0 \$1 hp-filter;
#X obj 31 117 module_create \$0 \$1 bp-filter;
#X obj 31 141 module_create \$0 \$1 analog-filter;
#X obj 30 164 module_create \$0 \$1 bob-filter;
#X obj 30 186 module_create \$0 \$1 formant;
#X obj 30 210 module_create \$0 \$1 bitcrush;
#X obj 30 234 module_create \$0 \$1 wavefold;
#X obj 30 258 module_create \$0 \$1 phasor;
#X obj 30 282 module_create \$0 \$1 combfilter;
#X obj 30 306 module_create \$0 \$1 granular-delay;
#X obj 30 330 module_create \$0 \$1 millerverb;
#X obj 30 354 module_create \$0 \$1 stereo-delay;
#X obj 286 49 module_create \$0 \$1 tremolo;
#X obj 289 77 module_create \$0 \$1 audiofreeze;
#X obj 289 108 module_create \$0 \$1 starlight;
#X obj 30 378 module_create \$0 \$1 chorus;
#X obj 30 402 module_create \$0 \$1 overdrive;
#X obj 30 426 module_create \$0 \$1 filterbank;
#X obj 30 449 module_create \$0 \$1 megaverb;
#X obj 30 471 module_create \$0 \$1 pitchshifter;
#X obj 30 494 module_create \$0 \$1 compressor;
#X obj 30 515 module_create \$0 \$1 channel-eq;
#X obj 30 537 module_create \$0 \$1 vintageverb;
#X restore 37 53 pd sound-processors;
#N canvas 0 112 371 457 modulation 0;
#X obj 14 112 module_create \$0 \$1 ahr;
#X obj 14 135 module_create \$0 \$1 slope;
#X obj 14 158 module_create \$0 \$1 decay;
#X obj 14 183 module_create \$0 \$1 basic-lfo;
#X obj 14 204 module_create \$0 \$1 random-gates;
#X obj 14 234 module_create \$0 \$1 s&h;
#X obj 14 260 module_create \$0 \$1 adsr;
#X obj 14 285 module_create \$0 \$1 random-voltages;
#X obj 14 309 module_create \$0 \$1 sinebank;
#X restore 37 75 pd modulation;
#N canvas 0 112 283 349 vca/mixers 0;
#X obj 14 20 module_create \$0 \$1 vca;
#X obj 13 41 module_create \$0 \$1 lpg;
#X obj 13 63 module_create \$0 \$1 xfade;
#X obj 13 85 module_create \$0 \$1 3way-xfade;
#X obj 13 108 module_create \$0 \$1 polarizer;
#X obj 13 131 module_create \$0 \$1 mixer2;
#X obj 13 154 module_create \$0 \$1 mixer4;
#X obj 13 177 module_create \$0 \$1 toggle-matrix;
#X obj 14 198 module_create \$0 \$1 maestro4;
#X obj 14 225 module_create \$0 \$1 random-mixer;
#X restore 37 97 pd vca/mixers;
#N canvas 0 172 348 548 utility/logic 0;
#X obj 14 20 module_create \$0 \$1 clock;
#X obj 14 43 module_create \$0 \$1 clock-multiply;
#X obj 15 68 module_create \$0 \$1 clock-divider-even;
#X obj 14 93 module_create \$0 \$1 clock-divider-odd;
#X obj 14 158 module_create \$0 \$1 vc-counter;
#X obj 14 180 module_create \$0 \$1 trigger-delay;
#X obj 14 202 module_create \$0 \$1 inverter;
#X obj 14 224 module_create \$0 \$1 scope;
#X obj 14 247 module_create \$0 \$1 slew;
#X obj 14 271 module_create \$0 \$1 probability;
#X obj 14 295 module_create \$0 \$1 quantizer;
#X obj 14 342 module_create \$0 \$1 4to1-switch;
#X obj 13 367 module_create \$0 \$1 1to4-switch;
#X obj 14 398 module_create \$0 \$1 env-follower;
#X obj 14 421 module_create \$0 \$1 trigger-train;
#X obj 14 446 module_create \$0 \$1 audio-recorder;
#X obj 14 472 module_create \$0 \$1 multitrack-recorder;
#X obj 15 497 module_create \$0 \$1 external-audio;
#X obj 15 524 module_create \$0 \$1 manual-triggers;
#X obj 15 544 module_create \$0 \$1 manual-toggle;
#X obj 15 564 module_create \$0 \$1 playhead;
#X obj 250 17 module_create \$0 \$1 swing;
#X obj 14 125 module_create \$0 \$1 abl-link;
#X restore 37 119 pd utility/logic;
#N canvas 0 142 248 332 sequencers 0;
#X obj 14 20 module_create \$0 \$1 8steps;
#X obj 14 43 module_create \$0 \$1 mega-sequencer;
#X obj 14 67 module_create \$0 \$1 trigger-seq;
#X obj 14 93 module_create \$0 \$1 gate-seq;
#X obj 14 118 module_create \$0 \$1 ratchet-seq;
#X obj 14 145 module_create \$0 \$1 euklid;
#X obj 14 175 module_create \$0 \$1 euclid777;
#X obj 13 202 module_create \$0 \$1 seqtable;
#X restore 37 141 pd sequencers;
#N canvas 0 112 287 294 organelle-modules 0;
#X obj 14 32 module_create \$0 \$1 organelle-knobs;
#X obj 14 57 module_create \$0 \$1 organelle-keyboard;
#X obj 15 83 module_create \$0 \$1 organelle-adsr;
#X obj 14 106 module_create \$0 \$1 organelle-aux;
#X obj 13 129 module_create \$0 \$1 audio-in;
#X obj 13 152 module_create \$0 \$1 poly-pulse;
#X obj 13 176 module_create \$0 \$1 poly-saw;
#X obj 13 202 module_create \$0 \$1 organelle-output;
#X restore 37 163 pd organelle-modules;
#N canvas 0 22 465 369 midi-modules 0;
#X obj 15 32 module_create \$0 \$1 midi-in;
#X obj 15 63 module_create \$0 \$1 cc-in;
#X obj 13 87 module_create \$0 \$1 midi-out;
#X obj 10 114 module_create \$0 \$1 cc-out;
#X obj 10 144 module_create \$0 \$1 midi-polyin;
#X restore 37 185 pd midi-modules;
#N canvas 0 82 229 228 user-made-modules 0;
#X restore 37 207 pd user-made-modules;
#N canvas 0 22 450 300 macro-structural-tools 0;
#X obj 20 30 module_create \$0 \$1 preset-manager;
#X obj 20 63 module_create \$0 \$1 param-nudge;
#X obj 20 93 module_create \$0 \$1 morph-seq;
#X obj 20 119 module_create \$0 \$1 time-manager;
#X obj 20 147 module_create \$0 \$1 random-time-manager;
#X obj 20 177 module_create \$0 \$1 macro-control;
#X obj 20 207 module_create \$0 \$1 macro-xy-control;
#X restore 38 230 pd macro-structural-tools;
#N canvas 1164 203 342 191 extra-modules 0;
#X obj 13 21 module_create \$0 \$1 extra-sampler;
#X restore 38 254 pd extra-modules;
#X restore 361 737 pd dynamic_patching_stuff;
#X text 480 6 dynamically add [declare -path] to parent canvas if not declared, f 22;
#X obj 801 870 v ACTIVE_DOLLARZERO;
#X obj 733 795 f \$0, f 14;
#X obj 699 669 r \$0-open-modules!;
#N canvas 0 57 1920 1023 manual_popups 0;
#N canvas 236 274 489 223 \$0-state-saving 0;
#X obj 17 12 cnv 15 400 60 empty empty STATE_SAVING 20 12 0 14 #dc4c90 #fcfcfc 0;
#N canvas 2 586 450 300 deprecated 0;
#X text 20 22 The state saving system works by writing parameter values to reloaded/textfile \$0s in the folder "statesave" inside the "patch_editor_abs" folder. When you load a module form the module list it is automatically being given a unique creation argument which creates a reloaded/textfile \$0 unique for that instance of the module. To save your patch \, simply save as you normally would from the FILE menu and the press ENTER on your keyboard or click the SAVE button in the upper left corner of the main window.;
#X text 20 196 IMPORTANT!!! To start a new project \, the entire folder structure needs to be copied since the abstractions and reloaded/textfile \$0s are unique to every project. Click the RESET button in the upper left corner to reset the counter that gives unique creation arguments for the modules.;
#X restore 28 153 pd deprecated;
#X text 27 83 Automatonism [RELOADED] saves the state of modules with the patch. No need to recopy full Automatonism folder structure for every project. Different project can coexist in a same folder.;
#X text 124 151 <- this was the old behaviour with Automatonism;
#X restore 35 504 pd \$0-state-saving;
#X obj 34 526 r \$0-open-state-saving!;
#X msg 34 547 vis 1;
#X obj 34 571 s pd-\$0-state-saving;
#X obj 443 261 r \$0-open-quick-guide!;
#N canvas 0 23 1004 774 \$0-quick-guide 0;
#X obj 17 17 cnv 15 750 60 empty empty Welcome_to_AUTOMATONISM:_Making_Music_with_Self-playing_Machines 20 12 0 14 #90d4b0 #fcfcfc 0;
#X text 19 86 FOLLOW THESE SIMPLE STEPS TO GET STARTED:;
#X text 19 246 2 Create a BASIC-OSC from the module list.;
#X text 20 422 4 Pure Data has an EDIT MODE and a PERFORMANCE MODE. To make patch connections between objects we need to be in EDIT MODE and to interact with the GUI we need to be in PERFORMANCE MODE. Toggle between the two modes with cmd+e.;
#X text 23 289 3 Open the module list and create the module in the lower right corner called MAESTRO4(dac~). This is the digital-to-analog-converter and is one of the modules that passes on sound to your speakers. Now you can soon make a sound.;
#X text 19 519 5 All inputs are at the top of the modules and all outputs are at the bottom. In EDIT MODE \, connect the BASIC-OSC's output CH1 on the MAESTRO4. Now \, you should have sound. Switch to PERFORMANCE MODE and use the mouse to move the PITCH slider on the BASIC-OSC module.;
#X text 20 622 6 Right click on any module and choose HELP to read more about a module's functions.;
#X text 464 245 8 You can call modules without using the module list simply by creating a new object in pd and type the module's name. For the state saving mechanism to work properly you do need to give the module a unique numerical argument. Type "basic-osc 1" for an oscillator and "basic-osc 2" if you need another one. By using the MODULES list this unique numbering is done automatically for you. Use the RESET link in the upper left corner when starting a new patch as this will reset the counter of unique numbers for modules.;
#X text 33 42 RIGHT+CLICK & CHOOSE 'HELP' ON ANY MODULE!;
#X text 464 125 7 In Automatonism [RELOADED] \, to save parameter states on each module \, you have to save the pd file \, like you normally would do from the FILE menu or cmd+s.;
#X text 19 127 1 When you press "esc" key \, you'll see a list of all current available modules. Click the button to the left of the module you want to load and it will appear in the parent window. The module list will then disappear. To call back the module list you can click the MENU button in AUTOMATONISM or simply upress "esc" on your keyboard.;
#X restore 443 238 pd \$0-quick-guide;
#X msg 443 283 vis 1;
#X obj 443 307 s pd-\$0-quick-guide;
#X msg 439 386 vis 1;
#X obj 439 411 s pd-\$0-signal-flow;
#X obj 439 364 r \$0-open-signal-flow!;
#N canvas 416 23 852 668 \$0-signal-flow 0;
#X obj 22 10 cnv 15 365 30 empty empty SIGNAL-FLOW 20 12 0 14 #dc4c90 #fcfcfc 0;
#X obj 26 161 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #9898dc #fcfcfc #000000 0 1;
#X obj 24 214 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #90d4b0 #000000 #000000 0 1;
#X obj 21 281 cnv 5 5 5 empty empty CLOCK-IN 0 0 0 8 #fcfcfc #dc4c90 0;
#X text 17 328 All inputs and outputs in the editor are at signal rate within the range of -1 to 1 In contrast to normal pd-programming there is no distinction between control rate and signal rate messages. Everything is converted to signal rate.;
#X msg 20 439 bang;
#X msg 20 461 1 0 \, 0 1 1;
#X obj 20 483 vline~;
#X msg 23 535 bang;
#X msg 23 557 1 0 \, 0 1 1;
#X obj 23 579 vline~;
#X msg 23 623 bang;
#X text 19 404 How to convert a simple bang to a trigger/gate signal in the patch editor:;
#X obj 23 601 threshold~ 0.99 0 1 0;
#X text 21 518 How to convert back to a control rate bang:;
#X obj 404 569 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 401 589 / 127;
#X obj 401 611 sig~;
#X text 398 534 How convert control numbers to the patch editor's signal flow:;
#X text 541 568 0-127;
#X text 21 178 Purple sliders and inlets means the slider will function as an attenuator for incoming CV.;
#X text 21 48 There are three types of signals in the patch editor: audio \, cv and trigger/gate/pulse/clock. The latter are marked with PINK inlets and outlets. General rule in the patch editor is that all connections are possible. Or \, at least \, just like in any hardware modular system - all connections might not work but there's no harm in trying. ! ! The patch-editor uses color-coding to clarify the signal flow as much as possible.;
#X text 18 287 And pink inlets means the input is expecting a trigger/gate signal to function properly.;
#X text 19 230 Green sliders and inlets tells you that the parameter is bi-polar \, most oftenly working as an attenueverter for incoming CV.;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 13 0;
#X connect 13 0 11 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X restore 440 342 pd \$0-signal-flow;
#X msg 437 496 vis 1;
#X obj 437 520 s pd-\$0-color-code;
#N canvas 138 156 591 276 \$0-color-code 0;
#X obj 140 39 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #9898dc #fcfcfc #000000 0 1;
#X obj 140 100 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #90d4b0 #000000 #000000 0 1;
#X obj 137 175 cnv 5 5 5 empty empty CLOCK-IN 0 0 0 8 #fcfcfc #dc4c90 0;
#X text 134 56 Purple sliders and inlets means the slider will function as an attenuator for incoming CV.;
#X text 133 117 Green sliders and inlets tells you that the parameter is bi-polar \, most oftenly working as an attenueverter for incoming CV.;
#X text 135 181 And pink inlets means the input is expecting a trigger/gate signal or short impulse(square-wave) to function properly.;
#X restore 438 452 pd \$0-color-code;
#N canvas 292 594 377 372 \$0-manual 0;
#X obj 17 12 cnv 15 320 60 empty empty WELCOME-TO-THE-AUTOMATONISM-MANUAL! 20 12 0 14 #90d4b0 #fcfcfc 0;
#X obj 22 82 hsl 115 30 0 127 0 0 \$0-open-signal-flow! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 79 82 cnv 15 60 30 empty empty FLOW 6 12 0 14 #e0e0e0 #404040 0;
#X obj 19 82 cnv 15 60 30 empty empty SIGNAL 4 12 0 14 #e0e0e0 #404040 0;
#X obj 21 119 hsl 115 30 0 127 0 0 \$0-open-color-code! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 79 119 cnv 15 60 30 empty empty CODE 6 12 0 14 #e0e0e0 #404040 0;
#X obj 18 119 cnv 15 60 30 empty empty COLOR 18 12 0 14 #e0e0e0 #404040 0;
#X obj 21 157 hsl 115 30 0 127 0 0 \$0-open-state-saving! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 79 157 cnv 15 60 30 empty empty SAVING 6 12 0 14 #e0e0e0 #404040 0;
#X obj 18 157 cnv 15 60 30 empty empty STATE 18 12 0 14 #e0e0e0 #404040 0;
#X obj 21 196 hsl 115 30 0 127 0 0 \$0-open-help-files! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 79 196 cnv 15 60 30 empty empty FILES 6 12 0 14 #e0e0e0 #404040 0;
#X obj 18 196 cnv 15 60 30 empty empty HELP 18 12 0 14 #e0e0e0 #404040 0;
#X obj 157 156 hsl 155 30 0 127 0 0 \$0-open-folder-hierarchy! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 215 156 cnv 15 100 30 empty empty HIERARCHY 20 12 0 14 #e0e0e0 #404040 0;
#X obj 154 156 cnv 15 60 30 empty empty FOLDER 18 12 0 14 #e0e0e0 #404040 0;
#X obj 158 192 hsl 170 30 0 127 0 0 \$0-open-feedback-loops! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 153 192 cnv 15 180 30 empty empty FEEDBACK-&-DSP-LOOPS 18 12 0 14 #e0e0e0 #404040 0;
#X obj 156 228 hsl 115 30 0 127 0 0 \$0-open-license! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 153 228 cnv 15 120 30 empty empty LICENSE 18 12 0 14 #e0e0e0 #404040 0;
#X obj 160 81 hsl 155 30 0 127 0 0 \$0-open-external-msg! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 152 81 cnv 15 120 30 empty empty EXTERNAL 18 12 0 14 #e0e0e0 #404040 0;
#X obj 237 81 cnv 15 80 30 empty empty MESSAGES 6 12 0 14 #e0e0e0 #404040 0;
#X obj 155 119 hsl 115 30 0 127 0 0 \$0-open-midi-mapping! empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 152 119 cnv 15 60 30 empty empty MIDI 18 12 0 14 #e0e0e0 #404040 0;
#X obj 213 119 cnv 15 60 30 empty empty MAPPING -5 12 0 14 #e0e0e0 #404040 0;
#X obj 17 263 cnv 20 180 100 empty empty AUTOMATONISM\ -RELOADED- 5 12 0 12 #ffe3c6 #404040 0;
#N canvas 301 289 564 340 About_Palettes 0;
#X text 23 50 A palette lets you choose modules and drag them directy in your patch., f 72;
#X text 21 74 You can create your own palette with modules of your choice., f 61;
#X text 21 98 You can can store modules and preserve their state (settings)., f 62;
#X text 28 157 * pd-vanilla + iemguts;
#X text 29 186 * plugdata;
#X text 25 128 Palettes work differently according to your platform;
#X text 20 14 ABOUT AUTOMATONISM PALETTES (EXPERIMENTAL FEATURE), f 68;
#X text 31 226 For more information \, click on PALETTE button in AUTOMATONISM main module;
#X restore 40 330 pd About_Palettes;
#N canvas 550 306 508 585 What_Is_New 0;
#X text 39 144 * Midi-mapping and Midi-learn features;
#X text 38 172 * Ability to save different projects in the same folder with different filenames (no need to use main.pd as filename);
#X text 35 314 * The new preset and state saving system is based on 'savestate' object \, where preset and state data are stored inside the main patch.;
#X text 35 375 * The legacy file-based preset and state saving system is deprecated \, but old savestate structure is automatically imported in new project.;
#X text 28 431 * Camomile VST plugin and DAW integration with new objects [playhead] and [macro-control] to enable automation inside DAW, f 62;
#X text 34 211 * Several projects can run simultaneously and independently ("local mode" in Preset-Manager);
#X text 28 483 * Plugdata compatible (for standalone or as DAW plugin);
#X text 30 516 * Customizable palettes for quickly adding modules into your project (works for vanilla + iemguts and for plugdata);
#X text 28 15 Automatonism [RELOADED] is aimed to upgrade Automatonism and use it as a live instrument \, with \, for example \, enhanced midi mapping.;
#X text 25 75 Unlike original project \, Automatonism [RELOADED] intensively uses internal abstractions inside modules \, in order to add new features :;
#X text 30 257 * Automatonism [RELOADED] made as an abstraction lib : init a new project just by typing [automatonism] in a blank patch., f 61;
#X restore 46 298 pd What_Is_New;
#X obj 34 291 cnv 15 140 30 empty empty WHAT\ IS\ NEW\ ? 18 12 0 14 #e0e0e0 #404040 0;
#X obj 34 326 cnv 15 140 30 empty empty ABOUT\ PALETTES 18 12 0 14 #e0e0e0 #404040 0;
#X restore 438 566 pd \$0-manual;
#X obj 438 590 r \$0-open-manual!;
#X msg 438 612 vis 1;
#X obj 438 636 s pd-\$0-manual;
#X obj 437 474 r \$0-open-color-code!;
#X obj 628 257 r open-organelle-map!;
#X obj 633 357 r open-tips-&-tricks!;
#X msg 633 410 \; pd-tips-&-tricks vis \$1;
#X obj 627 142 r \$0-open-help-files!;
#X msg 627 168 vis 1;
#N canvas 93 118 438 191 \$0-help-files 0;
#X obj 17 12 cnv 15 400 60 empty empty HELP-FILES 20 12 0 14 #dc4c90 #fcfcfc 0;
#X text 20 84 Right + click on individual modules and choose "HELP" to access detailed help-files on each modules inlets \, outlets and functionalities.;
#X restore 627 121 pd \$0-help-files;
#X obj 627 192 s pd-\$0-help-files;
#X msg 628 279 vis 1;
#X obj 628 303 s pd-\$0-organelle-map;
#N canvas 0 22 434 295 \$0-organelle-map 0;
#X obj 17 12 cnv 15 400 60 empty empty MAPPING-ORGANELLE-KNOBS/KEYS 20 12 0 14 #dc4c90 #fcfcfc 0;
#X text 20 84 There are specific modules for integrating the Organelle knobs and keyboard into your patches. Use "organelle-keyboard and "organelle-knobs" to connect the keyboard or knobs to parameter values in your patch. Remember that the parameter slider on the module acts as an offset when external cv is connected so set the slider to zero to access the entire range of the parameter with the organelle keyboard or knobs. See the"organelle-keyboard" and "organelle-knobs" help-files for more info. There are many ways to use PD with the Organelle. The "organelle-keyboard" and "organelle-knobs" modules use a simplistic approach. Use your own more elaborate pd-code for deeper control.;
#X restore 628 236 pd \$0-organelle-map;
#N canvas 0 22 435 328 \$0-tips-&-tricks 0;
#X obj 17 12 cnv 15 400 60 empty empty TIPS&TRICKS 20 12 0 14 #dc4c90 #fcfcfc 0;
#X text 20 110 Hide portions of a complex patch in a subpatch to gain more space.;
#X text 20 175 Don't forget to use utility modules;
#X text 20 201 Existing modular synthesis tutorials ond patches can be translated to the XOUDLAR playGROUND \; like nord modular patches \, sound on sound synthesis secrets \, allen strange's book \, make noise shared system patches \, buchla patches etc;
#X text 20 84 Useful tips and tricks:;
#X text 20 149 Use [switch~] in subpatches in large projects too free CPU;
#X text 20 266 If you want two same modules to share exact parameters copy&paste the module instead of loading a new from the module list.;
#X restore 635 334 pd \$0-tips-&-tricks;
#N canvas 0 23 432 503 \$0-advanced-pd-users 0;
#X obj 17 12 cnv 15 400 60 empty empty ADVANCED-PD-USERS 20 12 0 14 #e0e0e0 #404040 0;
#X text 20 84 Some useful information for advanced pd users who want to change \, interact or expand on the XODULAR PLAYGROUND code:;
#X text 21 141 LOREM IPSUM;
#X restore 632 464 pd \$0-advanced-pd-users;
#N canvas 0 22 673 716 \$0-make-your-own-module 0;
#X obj 17 12 cnv 15 400 60 empty empty MAKE-YOUR-OWN-MODULE 20 12 0 14 #dc4c90 #fcfcfc 0;
#X msg 24 128 bang;
#X msg 24 150 1 0 \, 0 1 1;
#X obj 24 172 vline~;
#X msg 23 222 bang;
#X msg 23 244 1 0 \, 0 1 1;
#X obj 23 266 vline~;
#X msg 23 310 bang;
#X text 23 93 How to convert a simple bang to a trigger/gate signal in the patch editor:;
#X obj 23 288 threshold~ 0.99 0 1 0;
#X text 21 205 How to convert back to a control rate bang:;
#X obj 28 389 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 25 409 / 127;
#X obj 25 431 sig~;
#X text 22 354 How convert control numbers to the patch editor's signal flow:;
#X text 165 388 0-127;
#X text 21 509 GRAPH ON PARENT;
#X text 22 539 MODULE TITLE;
#X text 24 575 INLET/OUTLET LABELS;
#X text 33 614 STATE-SAVING;
#X text 20 477 CV INPUTS:;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 9 0;
#X connect 9 0 7 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X restore 631 567 pd \$0-make-your-own-module;
#X msg 633 379 vis 1;
#X obj 630 487 r \$0-open-advanced-pd-users!;
#X msg 630 509 vis 1;
#X obj 630 533 s pd-\$0-advanced-pd-users;
#X obj 629 590 r \$0-open-make-your-own-module!;
#X msg 629 612 vis 1;
#X obj 629 636 s pd-\$0-make-your-own-module;
#X obj 828 139 r \$0-reset!;
#X obj 828 161 delay 500;
#N canvas 293 233 501 213 \$0-reset-warning 0;
#X obj 21 143 bng 15 250 50 0 \$0-reset! empty <--RESET! 17 7 0 10 #fcfcfc #000000 #000000;
#X text 18 49 WARNING!;
#X text 19 68 Never press the RESET! button in the middle of working of a patch since it can cause the state saving mechanism to malfunction. Only use it when starting a new patch and you want the module counters to start over at zero. PRESS THE BUTTON BELOW TO RESET:;
#X restore 827 37 pd \$0-reset-warning;
#X obj 828 62 r \$0-open-reset-warning!;
#X msg 828 84 vis 1;
#X msg 831 311 vis 1;
#X obj 828 108 s pd-\$0-reset-warning;
#X msg 828 185 vis 0;
#X obj 828 208 s pd-\$0-reset-warning;
#N canvas 472 160 457 575 \$0-external-msg 0;
#X obj 17 12 cnv 15 400 60 empty empty EXTERNAL_MESSAGES 20 12 0 14 #dc4c90 #fcfcfc 0;
#X text 27 86 You can send external control messages into Automatonism modules since Automatonsim 3.0. This makes it easier to map midi controllers to specific parameters and integrate your patches with other Pure Data patches. External Messages routing in Automatonism works like this:;
#X obj 41 181 hsl 128 15 0 127 0 0 empty empty 0-127 -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X floatatom 38 201 5 0 0 0 - - - 0;
#X msg 38 221 PITCH \$1 1;
#X obj 38 242 s basic-osc;
#X text 36 276 Send a value between 0-127;
#X text 38 395 To control the P-WIDTH slider of the BASIC-OSC with instance number 3 \, do this instead:;
#X obj 41 451 hsl 128 15 0 127 0 0 empty empty 0-127 -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X floatatom 38 471 5 0 0 0 - - - 0;
#X msg 38 491 P-WIDTH \$1 3;
#X obj 38 512 s basic-osc;
#X text 37 296 Write a message where the first word is the name of the slider you are trying to externally control \, type "\$1" to pass on your value to the module and finally type the instance number of the specific module you want to control. The instance number is always showcased to the right of the module's title. Then create a send object and send to the name of the module \, for example [s basic-osc];
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X restore 833 266 pd \$0-external-msg;
#X obj 831 289 r \$0-open-external-msg!;
#X obj 831 335 s pd-\$0-external-msg;
#X msg 831 421 vis 1;
#N canvas 472 160 579 624 \$0-midi-mapping 0;
#X obj 17 12 cnv 15 400 60 empty empty MIDI_MAPPING 20 12 0 14 #dc4c90 #fcfcfc 0;
#X obj 12 140 vradio 50 1 0 3 \$0-edit_mapping empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0;
#X obj 12 140 tgl 50 0 MIDI_LEARN MIDI_LEARN-rcv MIDI_LEARN 2 7 0 10 #fce0c4 #000000 #000000 0 1;
#X obj 12 190 tgl 50 0 MIDI_MAP_FROM MIDI_MAP_FROM-rcv MAP_FROM 2 7 0 10 #c4fcc4 #000000 #000000 0 1;
#X obj 12 240 tgl 50 0 MIDI_MAP_TO MIDI_MAP_TO-rcv MAP_TO 2 7 0 10 #c4fcfc #000000 #000000 0 1;
#X text 122 143 2) move your midi controler;
#X text 117 259 1) click LEARN \, but don't touch your midi controler;
#X text 116 276 2) then click to the target slider you want to unmap;
#X text 87 231 * to cancel a midi-mapping :;
#X text 84 94 * to create a midi-mapping;
#X text 122 124 1) click MIDI_LEARN;
#X text 122 164 3) then click to the target widget you want to midi-map;
#X text 122 362 1) click on MAP_FROM (resp. MAP_TO);
#X text 124 388 2) editable widgets become green (resp. blue);
#X text 82 335 * to edit bounds values;
#X text 125 414 3) With the mouse \, change the bound value \, then uncheck MAP_FROM (MAP_TO);
#X text 158 185 (mappable widgets are drawn in orange);
#X restore 833 376 pd \$0-midi-mapping;
#X obj 831 399 r \$0-open-midi-mapping!;
#X obj 831 445 s pd-\$0-midi-mapping;
#X obj 861 501 r \$0-open-folder-hierarchy!;
#N canvas 0 233 509 261 \$0-folder-hierarchy 0;
#X obj 17 12 cnv 15 400 60 empty empty FOLDER-HIEARCHY 20 12 0 14 #dc4c90 #fcfcfc 0;
#N canvas 1341 384 450 300 deprecated 0;
#X text 14 34 Inside your project folder you'll find a file called "main.pd" and a folder called "patch_editor_abs". The "main.pd" must stay named the same for Automatonism to function properly. Also \, each of your projects/patches needs tp be in a separet folder with its own "main.pd" and "patch_editor_abs" folder. Copy & paste the project folder \, which you can give any name \, when you want to start a new project/patch.;
#X restore 38 194 pd deprecated;
#X text 147 195 <- this was the old behaviour with Automatonism;
#X text 26 88 You have to store the Automatonism folder structure in a path that has been included in pd search paths.;
#X text 28 140 For example : /home/<user>/documents/pd/externals/ may be a good choice.;
#X restore 862 478 pd \$0-folder-hierarchy;
#X msg 861 523 vis 1;
#X obj 861 547 s pd-\$0-folder-hierarchy;
#N canvas 0 233 493 352 \$0-feedback-loops 0;
#X obj 17 12 cnv 15 400 60 empty empty FEEDBACK-&-DSP-LOOPS 20 12 0 14 #dc4c90 #fcfcfc 0;
#X text 23 83 Feedback patching is very much possible in the AUTOMATONISM \, just a little bit differently from physical modular systems. If you try to patch a module into itself or any kind of feedback routing \, Pure Data will become silent and you'll get a "DSP loop detected" message in the Pd window. To avoid this you need to delay the signal a tiny tiny bit. Normal [send~) and [receive~] objects automatically does this in Pd. Send the signal to be feedbacked into a [send~ MyFeedback] and pick it up using [receive~ MyFeedback] and then patch into the input to close the feedback loop. Obviously "MyFeedback" could be anything and the abbreviation for send and receive [s~] and [r~] work equally as well.;
#X restore 1069 481 pd \$0-feedback-loops;
#X obj 1067 504 r \$0-open-feedback-loops!;
#X msg 1067 526 vis 1;
#X obj 1067 550 s pd-\$0-feedback-loops;
#N canvas 0 23 525 315 \$0-license 0;
#X obj 17 12 cnv 15 400 60 empty empty LICENSE 20 12 0 14 #e0e0e0 #404040 0;
#X text 19 172 Copyright ©  2017 \, Johan Eriksson Automatonism is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation \, either version 3 of the License \, or any later version. This program is distributed in the hope that it will be useful \, but WITHOUT ANY WARRANTY \; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.;
#X text 21 123 The same type of license should be applied.;
#X text 21 81 Automatonism [RELOADED] \, Copyright ©  2021-23 by Jean-Yves Gratius \, is based on Johan Eriksson's Automatonism work.;
#X restore 1068 595 pd \$0-license;
#X obj 1066 618 r \$0-open-license!;
#X msg 1066 640 vis 1;
#X obj 1066 664 s pd-\$0-license;
#N canvas 0 23 432 503 \$0-export-patches 0;
#X obj 17 12 cnv 15 400 60 empty empty EXPORT-PATCH 20 12 0 14 #e0e0e0 #404040 0;
#X text 20 84 So \, how do you export patces made in the editor to the Organelle?;
#X text 26 131 LOREM IPSUM.;
#X restore 858 605 pd \$0-export-patches;
#X obj 857 628 r \$0-open-export-patches!;
#X msg 857 650 vis 1;
#X obj 857 674 s pd-\$0-export-patches;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 10 0 8 0;
#X connect 12 0 13 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 19 0 12 0;
#X connect 20 0 27 0;
#X connect 21 0 33 0;
#X connect 23 0 24 0;
#X connect 24 0 26 0;
#X connect 27 0 28 0;
#X connect 33 0 22 0;
#X connect 34 0 35 0;
#X connect 35 0 36 0;
#X connect 37 0 38 0;
#X connect 38 0 39 0;
#X connect 40 0 41 0;
#X connect 41 0 47 0;
#X connect 43 0 44 0;
#X connect 44 0 46 0;
#X connect 45 0 51 0;
#X connect 47 0 48 0;
#X connect 50 0 45 0;
#X connect 52 0 55 0;
#X connect 54 0 52 0;
#X connect 56 0 58 0;
#X connect 58 0 59 0;
#X connect 61 0 62 0;
#X connect 62 0 63 0;
#X connect 65 0 66 0;
#X connect 66 0 67 0;
#X connect 69 0 70 0;
#X connect 70 0 71 0;
#X coords 0 -1 1 1 85 60 0;
#X restore 360 821 pd manual_popups;
#X text 47 15 AUTOMATONISM;
#X obj 815 67 declare -path iemguts;
#X obj 810 94 declare -lib iemguts;
#N canvas 0 25 450 300 check_installed_externals 0;
#X obj 98 24 inlet;
#X obj 96 306 outlet;
#X text 326 204 vanilla;
#X obj 319 258 s \$1-this;
#X obj 183 21 loadbang;
#X obj 183 111 f \$1;
#X obj 182 136 select 0;
#X msg 225 171 1;
#X text 111 333 iemguts;
#X obj 98 227 route 0 1;
#X obj 98 198 list prepend 0;
#X msg 178 161 0;
#X obj 183 64 delay 100;
#X connect 0 0 10 0;
#X connect 4 0 12 0;
#X connect 5 0 6 0;
#X connect 6 0 11 0;
#X connect 6 1 7 0;
#X connect 7 0 10 1;
#X connect 9 0 1 0;
#X connect 9 1 3 0;
#X connect 10 0 9 0;
#X connect 11 0 10 1;
#X connect 12 0 5 0;
#X restore 466 202 pd check_installed_externals;
#X msg 1387 146 \; pd dsp 0;
#X obj 1386 44 loadbang;
#X obj 1387 121 delay 1;
#X obj 1387 74 t b b;
#X msg 1483 180 \; pd dsp 1;
#X obj 1483 125 delay 1000;
#N canvas 237 262 676 547 savestate 0;
#X msg 90 191 menusave;
#X obj 69 311 savestate;
#X obj 168 366 spigot 1;
#X msg 213 265 0;
#X obj 52 240 delay 100;
#X msg 78 270 1;
#X obj 176 115 s ACTIVE_DOLLARZERO;
#X obj 98 53 t b b b;
#X obj 150 144 s SAVE-S;
#X obj 59 106 delay 100;
#X obj 72 163 t b b b;
#X obj 100 15 r \$0-save-s;
#X obj 168 391 s \$0-save-r;
#X obj 274 218 s \$0-target_patch;
#X obj 176 84 f \$0;
#X obj 69 410 f \$0;
#X obj 69 372 t b;
#X obj 69 435 v ACTIVE_DOLLARZERO;
#X obj 303 330 s SAVE-S;
#X connect 0 0 13 0;
#X connect 1 0 16 0;
#X connect 1 1 18 0;
#X connect 2 0 12 0;
#X connect 3 0 2 1;
#X connect 4 0 5 0;
#X connect 5 0 2 1;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 7 2 14 0;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 10 1 0 0;
#X connect 10 2 3 0;
#X connect 11 0 7 0;
#X connect 14 0 6 0;
#X connect 15 0 17 0;
#X connect 16 0 15 0;
#X restore 1234 758 pd savestate;
#X obj 799 264 r \$0-midi_learn_ok;
#X obj 1422 257 t b b b;
#X obj 1535 369 f \$0;
#X obj 1536 405 s ACTIVE_DOLLARZERO;
#X obj 1374 451 s MIDI_MAP_SETTINGS;
#X obj 1252 454 t b b;
#X obj 1207 551 s MIDI_MAP_SETTINGS;
#X obj 1320 491 f \$0;
#X obj 1320 516 s ACTIVE_DOLLARZERO;
#X obj 90 457 key;
#X obj 467 230 sendcanvas 1;
#X obj 495 512 receivecanvas 1;
#X obj 733 881 t b f;
#X obj 82 1060 unpack f f;
#X obj 80 909 route motion zoom;
#X obj 82 1114 / 1;
#X obj 148 1116 / 1;
#X obj 80 1160 pack f f;
#X obj 80 1185 s \$0-coords;
#X obj 77 875 spigot;
#X obj 80 1027 spigot 1;
#X obj 116 992 == 0;
#X obj 116 963 r \$0-modules_menu_opened;
#X obj 232 995 select 0;
#X msg 232 1020 200 200;
#X obj 77 790 receivecanvas 1;
#X text 46 41 THIS IS THE ABSTRACTION YOU HAVE TO INSERT IN YOUR MAIN PATCH ., f 32;
#X text 1643 17 PALETTE - VANILLA;
#X obj 102 255 bng 15 250 50 0 \$0-open-palette! empty <--PALETTE 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 194 226 cnv 5 1 1 empty empty Esc.Key 0 0 0 9 #feffc6 #404040 0;
#X obj 205 233 vradio 11 1 0 2 \$0-esc-active \$0-esc-active-rcv OFF -14 4 0 7 #fffff7 #000000 #000000 0;
#X obj 116 822 r \$0-esc-active;
#X obj 116 846 == 1;
#X text 116 223 MODULES;
#N canvas 753 50 546 375 \$0-palette 0;
#X text 20 14 ABOUT AUTOMATONISM PALETTES (puredata vanilla + iemguts externals), f 68;
#X text 21 113 You can create your own palette with modules of your choice., f 61;
#X obj 55 210 bng 20 250 50 0 empty empty Add_default_palette_and_close_this_window 0 -10 0 12 #fcfcfc #000000 #000000;
#N canvas 43 642 538 318 add_the_default_palette_to_your_patch 0;
#X obj 236 216 s \$0-target_patch;
#X text 44 9 You can create several custom palettes in vanilla;
#X text 31 38 For an example \, put [automatonism/my_palette] in your patch :, f 63;
#X obj 108 79 inlet;
#X msg 134 113 obj 200 60 automatonism/default_palette;
#X obj 174 252 s pd-default_palette.pd;
#X msg 170 220 loadbang;
#X obj 39 235 s pd-\$0-palette;
#X obj 101 159 t b b a;
#X msg 51 195 vis 0;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 6 0 5 0;
#X connect 8 0 9 0;
#X connect 8 1 6 0;
#X connect 8 2 0 0;
#X connect 9 0 7 0;
#X restore 55 232 pd add_the_default_palette_to_your_patch;
#X text 21 135 You can can store modules and preserve their state (settings)., f 62;
#X obj 55 307 bng 20 250 50 0 empty empty Add_Automatonism_palette_and_close_this_window 0 -10 0 12 #fcfcfc #000000 #000000;
#N canvas 43 642 538 318 add_Automatonism_palette_to_your_patch 0;
#X obj 236 216 s \$0-target_patch;
#X text 44 9 You can create several custom palettes in vanilla;
#X text 31 38 For an example \, put [automatonism/my_palette] in your patch :, f 63;
#X obj 108 79 inlet;
#X msg 170 220 loadbang;
#X obj 39 235 s pd-\$0-palette;
#X obj 101 159 t b b a;
#X msg 51 195 vis 0;
#X obj 174 252 s pd-simple_palette.pd;
#X msg 134 113 obj 200 40 automatonism/simple_palette;
#X connect 3 0 9 0;
#X connect 4 0 8 0;
#X connect 6 0 7 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 5 0;
#X connect 9 0 6 0;
#X restore 54 332 pd add_Automatonism_palette_to_your_patch;
#X text 68 42 THIS IS AN EXPERIMENTAL FEATURE;
#X text 19 71 A palette is a window from which you choose modules and drag them directy in your patch., f 72;
#X text 21 166 You can start by adding a customizable default palette to your patch :, f 71;
#X text 21 267 This is a palette with all Automatonism modules and tooltips :, f 63;
#X connect 2 0 3 0;
#X connect 5 0 6 0;
#X restore 1663 51 pd \$0-palette;
#X obj 1008 918 s \$0-active-rcv;
#X obj 985 763 == \$0;
#X obj 985 788 change;
#X obj 985 813 select 1 0;
#X msg 1106 876 color #aaaaaa #aaaaaa #aaaaaa;
#X msg 1212 812 color #ccffcc #ccffcc #ccffcc;
#X obj 145 512 r ACTIVE_DOLLARZERO;
#X obj 493 615 delay 10;
#X obj 495 542 route motion;
#X text 166 237 ---->;
#N canvas 0 0 450 300 check_if_vanilla 0;
#X obj 70 44 loadbang;
#X obj 60 250 delay 1;
#N canvas 665 494 596 300 \$0-AUTOMATONISM 0;
#X text 25 129 You can rename it and save it anywhere on your filesystem;
#N canvas 150 175 450 300 open_automatonism_template 0;
#X obj 96 15 inlet;
#X obj 91 192 pdcontrol;
#X msg 92 161 dir;
#X msg 89 225 \; pd open template-patch(vanilla).pd \$1;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X restore 47 226 pd open_automatonism_template;
#X obj 47 189 bng 15 250 50 0 empty empty OPEN_AUTOMATONISM_VANILLA_TEMPLATE 17 7 0 10 #fcfcfc #000000 #000000;
#X text 19 17 WELCOME TO AUTOMATONISM [RELOADED];
#X text 20 55 You are using a PureData vanilla setup (i.e. without externals)., f 64;
#X text 23 93 To use AUTOMATONISM \, Please start using the vanilla template template-patch(vanilla).pd, f 61;
#X connect 2 0 1 0;
#X restore 240 30 pd \$0-AUTOMATONISM;
#X msg 61 331 vis 1;
#X obj 60 368 s pd-\$0-AUTOMATONISM;
#X obj 60 298 select 1;
#X obj 60 274 v ELSE_NOT_LOADED;
#X obj 70 90 delay 1;
#X obj 60 131 v is_patch_editor_path_declared;
#X obj 70 176 select 1;
#X connect 0 0 7 0;
#X connect 1 0 6 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 1 0;
#X restore 472 144 pd check_if_vanilla;
#N canvas 1073 552 450 300 check_if_plugdata 0;
#X obj 89 129 r playhead;
#X obj 85 163 route playing, f 15;
#X msg 80 198 1;
#X obj 80 227 v IS_PLUGDATA;
#X obj 53 62 r _playhead;
#X text 150 62 next plugdataversions;
#X text 181 129 waiting for official release;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 1 0;
#X restore 472 111 pd check_if_plugdata;
#N canvas 512 229 979 798 check 0;
#X msg 114 619 obj 10 10 declare -path automatonism/patch_editor_abs;
#X obj 517 601 v is_patch_editor_path_declared;
#X msg 518 572 1;
#X obj 119 697 s \$0-target_patch;
#X msg 175 668 obj 10 10 declare -path patch_editor_abs;
#X obj 58 455 f;
#X obj 62 484 +;
#X obj 121 247 print Automatonism;
#X text 267 289 ______;
#X obj 119 587 select 1 3 2;
#X obj 61 512 select 0;
#X obj 45 801 print Automatonism;
#X msg 47 757 Error : couldn't find automatonism's core directories. Please check your installation.;
#X obj 475 125 delay 10;
#X obj 60 180 t b b b b b;
#X obj 473 155 s \$0-open-modules!;
#X obj 48 128 file which;
#X obj 48 77 loadbang;
#X obj 580 330 file which;
#X obj 579 374 t b;
#X text 581 281 path to automatonism folder declared ?;
#X obj 91 352 file which;
#X obj 89 380 t b;
#X msg 579 399 2;
#X msg 82 413 1;
#X text 120 288 path to automatonism parent folder declared ?;
#X text 128 28 Checking declared pathes;
#X msg 93 310 symbol automatonism/patch_editor_abs/is_patch_editor_path_declared.pd, f 64;
#X msg 47 102 symbol is_patch_editor_path_declared.pd;
#X msg 579 304 symbol patch_editor_abs/is_patch_editor_path_declared.pd;
#X msg 122 208 Welcome to Automatonism [reloaded] ! \, [declare] object is being added to main patch.;
#X msg 543 672 obj 10 40 namecanvas \\\$0-this;
#X obj 118 549 t f b b;
#X connect 0 0 3 0;
#X connect 2 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 9 0 0 0;
#X connect 9 1 0 0;
#X connect 9 2 4 0;
#X connect 10 0 12 0;
#X connect 10 1 32 0;
#X connect 12 0 11 0;
#X connect 13 0 15 0;
#X connect 14 0 5 0;
#X connect 14 1 27 0;
#X connect 14 2 29 0;
#X connect 14 3 30 0;
#X connect 14 4 13 0;
#X connect 16 1 14 0;
#X connect 17 0 28 0;
#X connect 18 0 19 0;
#X connect 19 0 23 0;
#X connect 21 0 22 0;
#X connect 22 0 24 0;
#X connect 23 0 6 1;
#X connect 24 0 5 1;
#X connect 27 0 21 0;
#X connect 28 0 16 0;
#X connect 29 0 18 0;
#X connect 30 0 7 0;
#X connect 31 0 3 0;
#X connect 32 0 9 0;
#X connect 32 1 31 0;
#X connect 32 2 2 0;
#X restore 472 80 pd check declared paths;
#N canvas 420 0 756 530 plugdata_plugin_support 0;
#X obj 288 587 list append;
#X obj 335 614 s;
#X msg 434 575 symbol from_host.load-\$1;
#X obj 361 100 v IS_CAMOMILE;
#X obj 330 163 spigot;
#X obj 361 124 == 0;
#N canvas 0 0 533 465 string_replace..with/ 0;
#X obj 51 36 inlet;
#X obj 51 61 list fromsymbol;
#X obj 71 111 list length;
#X obj 70 149 until;
#X obj 160 134 list split 1;
#X obj 115 356 list prepend;
#X obj 109 380 t l l;
#X obj 32 409 list append;
#X obj 31 445 list tosymbol;
#X obj 31 470 outlet;
#X obj 67 193 list append;
#X obj 51 86 t b l l b b, f 23;
#X obj 171 172 t l l;
#X obj 234 220 select 46;
#X obj 76 223 select;
#X msg 234 245 46;
#X msg 292 251 -1;
#X msg 76 275 47;
#X obj 234 195 list split 1;
#X obj 129 321 spigot 1;
#X obj 76 249 t b b;
#X msg 161 288 0;
#X obj 129 246 t b f;
#X msg 214 286 1;
#X connect 0 0 1 0;
#X connect 1 0 11 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 4 0 14 0;
#X connect 4 1 12 0;
#X connect 5 0 6 0;
#X connect 6 0 7 1;
#X connect 6 1 5 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 10 0 4 0;
#X connect 11 0 7 0;
#X connect 11 1 2 0;
#X connect 11 2 4 0;
#X connect 11 3 10 1;
#X connect 11 4 5 1;
#X connect 12 0 10 1;
#X connect 12 1 18 0;
#X connect 13 0 15 0;
#X connect 13 1 16 0;
#X connect 14 0 20 0;
#X connect 14 1 22 0;
#X connect 15 0 14 1;
#X connect 16 0 14 1;
#X connect 17 0 5 0;
#X connect 18 0 13 0;
#X connect 19 0 5 0;
#X connect 20 0 17 0;
#X connect 20 1 21 0;
#X connect 21 0 19 1;
#X connect 22 0 23 0;
#X connect 22 1 19 0;
#X connect 23 0 19 1;
#X restore 314 514 pd string_replace..with/;
#X obj 71 133 r to_plugdatabuffer;
#N canvas 0 0 533 465 string_replace/with.. 0;
#X obj 51 36 inlet;
#X obj 51 61 list fromsymbol;
#X obj 71 111 list length;
#X obj 70 149 until;
#X obj 162 151 list split 1;
#X obj 251 52 list fromsymbol;
#X floatatom 251 77 5 0 0 0 - - - 0;
#X obj 161 183 select 47;
#X msg 244 23 symbol .;
#X msg 161 208 46 46;
#X text 244 188 /;
#X text 226 210 ..;
#X obj 83 281 list prepend;
#X obj 83 306 t l l;
#X obj 32 349 list append;
#X obj 31 385 list tosymbol;
#X obj 31 410 outlet;
#X obj 67 193 list append;
#X obj 51 86 t b l l b b, f 23;
#X connect 0 0 1 0;
#X connect 1 0 18 0;
#X connect 2 0 3 0;
#X connect 3 0 17 0;
#X connect 4 0 7 0;
#X connect 4 1 17 1;
#X connect 5 0 6 0;
#X connect 7 0 9 0;
#X connect 7 1 12 0;
#X connect 8 0 5 0;
#X connect 9 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 1;
#X connect 13 1 12 1;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 17 0 4 0;
#X connect 18 0 14 0;
#X connect 18 1 2 0;
#X connect 18 2 4 0;
#X connect 18 3 17 1;
#X connect 18 4 12 1;
#X restore 68 230 pd string_replace/with..;
#X obj 69 192 list split 1;
#X obj 68 340 list append;
#X obj 396 530 list split 1;
#X obj 316 557 list prepend;
#X text 279 29 list statesave..1-bwl-osc-ss.txt bwl-osc-1 preset 39 78 68 0 3, f 67;
#X text 13 70 replacing / with ..;
#X text 14 95 / forbidden in xml tag name;
#X text 497 462 replace .. with /;
#X obj 330 53 r from_daw_databuffer;
#X obj 68 382 s to_daw_databuffer;
#X obj 125 266 list prepend DATA;
#X obj 327 187 t l l;
#X msg 358 211 \$2;
#X obj 358 236 route DATA;
#X obj 316 311 spigot;
#X msg 365 281 1;
#X msg 423 287 0;
#X obj 424 263 t b;
#X obj 315 451 list split 3;
#X obj 313 479 unpack s s s;
#X obj 330 76 t l b;
#X text 47 297 tag message sent to daw databuffer;
#X text 454 231 forward only tagged messages;
#X msg 565 109;
#X text 449 176 <clé_unique> DATA <target> .....;
#X obj 316 414 t l l;
#X obj 346 379 spigot;
#X obj 460 392 v;
#X obj 346 343 t l b l;
#X msg 437 343 symbol Does_module_\$3_exist?;
#X obj 543 386 loadbang;
#X msg 543 411 symbol NIL;
#X connect 0 0 1 0;
#X connect 2 0 1 1;
#X connect 3 0 5 0;
#X connect 4 0 20 0;
#X connect 5 0 4 1;
#X connect 6 0 12 0;
#X connect 7 0 9 0;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 9 1 19 0;
#X connect 10 0 18 0;
#X connect 11 0 12 1;
#X connect 11 1 0 1;
#X connect 12 0 0 0;
#X connect 17 0 29 0;
#X connect 19 0 10 1;
#X connect 20 0 23 0;
#X connect 20 1 21 0;
#X connect 21 0 22 0;
#X connect 22 0 24 0;
#X connect 22 1 26 0;
#X connect 23 0 37 0;
#X connect 24 0 23 1;
#X connect 25 0 23 1;
#X connect 26 0 25 0;
#X connect 27 0 28 0;
#X connect 27 1 11 0;
#X connect 28 0 6 0;
#X connect 28 2 2 0;
#X connect 29 0 4 0;
#X connect 29 1 3 0;
#X connect 34 0 18 0;
#X connect 34 1 27 0;
#X connect 35 0 34 0;
#X connect 36 0 35 1;
#X connect 37 0 35 0;
#X connect 37 1 36 0;
#X connect 37 2 38 0;
#X connect 38 0 36 1;
#X connect 39 0 40 0;
#X connect 40 0 36 1;
#X restore 1414 745 pd plugdata_plugin_support;
#X obj 410 993 t f b;
#X obj 436 1076 v IS_PLUGDATA;
#X obj 436 1105 == 0;
#X obj 410 1143 spigot 1;
#N canvas 0 25 723 566 modes(midi_learn/midi_map_from/midi_map_to 0;
#X obj 153 18 inlet;
#X obj 216 294 == 0;
#X msg 193 253 1;
#X obj 149 61 + 1;
#X obj 130 322 * 1;
#X obj 179 290 f 1;
#X obj 406 335 s MIDI_MAP_TO;
#X obj 559 339 s MIDI_MAP_FROM;
#X msg 282 196 \$1 0;
#X obj 130 358 select 0;
#X obj 130 383 f;
#X msg 130 408 \$1 0;
#X msg 191 407 \$1 1;
#X obj 305 293 t f f;
#X obj 367 294 t f f;
#X obj 433 297 t f f;
#X obj 264 170 f;
#X obj 207 229 t b b;
#X obj 326 252 route 1 3 2;
#X obj 163 173 select;
#X obj 272 464 select 0 1;
#X msg 263 505 color 4 4;
#X msg 342 503 color 13 13;
#X obj 462 464 select 0 1;
#X obj 642 464 select 0 1;
#X msg 712 503 color 16 16;
#X msg 633 505 color 6 6;
#X msg 453 505 color 7 7;
#X msg 532 503 color 17 17;
#X obj 263 530 s \$0-midi_learn-rcv;
#X obj 453 530 s \$0-midi_map_to-rcv;
#X obj 633 530 s \$0-midi_map_from-rcv;
#X obj 324 54 r \$0-midi_learn;
#X msg 464 80 2;
#X msg 592 81 3;
#X msg 324 79 1;
#X obj 464 55 r \$0-midi_map_from;
#X obj 550 17 r \$0-midi_map_to;
#X obj 131 105 t f f f f f b;
#X obj 395 159 f \$0;
#X obj 393 193 s ACTIVE_DOLLARZERO;
#X obj 285 332 s MIDI_LEARN;
#X connect 0 0 3 0;
#X connect 1 0 5 1;
#X connect 2 0 5 0;
#X connect 3 0 38 0;
#X connect 4 0 9 0;
#X connect 5 0 1 0;
#X connect 5 0 4 1;
#X connect 8 0 18 0;
#X connect 9 0 10 0;
#X connect 9 1 12 0;
#X connect 10 0 11 0;
#X connect 11 0 18 0;
#X connect 12 0 18 0;
#X connect 13 0 41 0;
#X connect 13 1 20 0;
#X connect 14 0 6 0;
#X connect 14 1 23 0;
#X connect 15 0 7 0;
#X connect 15 1 24 0;
#X connect 16 0 8 0;
#X connect 17 0 2 0;
#X connect 17 1 16 0;
#X connect 18 0 13 0;
#X connect 18 1 14 0;
#X connect 18 2 15 0;
#X connect 19 0 5 0;
#X connect 19 1 17 0;
#X connect 20 0 21 0;
#X connect 20 1 22 0;
#X connect 21 0 29 0;
#X connect 22 0 29 0;
#X connect 23 0 27 0;
#X connect 23 1 28 0;
#X connect 24 0 26 0;
#X connect 24 1 25 0;
#X connect 25 0 31 0;
#X connect 26 0 31 0;
#X connect 27 0 30 0;
#X connect 28 0 30 0;
#X connect 32 0 35 0;
#X connect 33 0 38 0;
#X connect 34 0 38 0;
#X connect 35 0 38 0;
#X connect 36 0 33 0;
#X connect 37 0 34 0;
#X connect 38 0 4 0;
#X connect 38 1 10 1;
#X connect 38 2 19 1;
#X connect 38 3 16 1;
#X connect 38 4 19 0;
#X connect 38 5 39 0;
#X connect 39 0 40 0;
#X restore 803 389 pd modes(midi_learn/midi_map_from/midi_map_to;
#N canvas 0 25 1217 770 midi_input_for_mapping 0;
#X obj 87 100 r MIDI_LEARN;
#X msg 88 170 -1;
#X obj 444 34 ctlin;
#X obj 488 160 v MIDI_CHANNEL;
#X obj 303 148 notein;
#X obj 136 220 v MIDI_MAP_NUM;
#X obj 131 251 v MIDI_MAP_TYPE;
#X obj 471 194 v MIDI_MAP_NUM;
#X obj 132 187 v MIDI_MAP_CHANNEL;
#X obj 451 249 v MIDI_MAP_TYPE;
#X msg 455 225 0;
#X obj 342 174 v MIDI_CHANNEL;
#X obj 310 254 v MIDI_MAP_NUM;
#X obj 322 230 v MIDI_MAP_TYPE;
#X msg 326 206 1;
#X floatatom 516 108 5 0 0 0 - - - 0;
#X msg 579 115 1;
#X obj 705 294 r MIDI_LEARN;
#X obj 303 361 spigot;
#X obj 310 321 pack f f;
#X obj 609 288 pack f f;
#X obj 611 331 spigot;
#X obj 606 403 s \$0-midi_in;
#X msg 611 367 label ctl:\$2:\$1;
#X msg 303 394 label note:\$2:\$1;
#X msg 77 310 label ...;
#X obj 88 145 select 1 0;
#X msg 193 298 label;
#X obj 943 215 v MIDI_CHANNEL;
#X obj 906 251 v MIDI_MAP_NUM;
#X obj 861 337 v MIDI_MAP_TYPE;
#X msg 857 289 3;
#X obj 858 118 t b l l;
#X obj 900 160 unpack f f;
#X obj 1094 294 r MIDI_LEARN;
#X obj 1051 326 spigot;
#X msg 1051 351 label MACRO:\$2:\$1;
#X obj 855 77 r MACRO_MAP;
#X text 908 287 3 = macro;
#X obj 586 496 key;
#X connect 0 0 26 0;
#X connect 1 0 5 0;
#X connect 1 0 8 0;
#X connect 1 0 6 0;
#X connect 2 1 7 0;
#X connect 2 1 10 0;
#X connect 2 1 20 0;
#X connect 2 2 3 0;
#X connect 2 2 20 1;
#X connect 4 0 12 0;
#X connect 4 0 14 0;
#X connect 4 0 19 0;
#X connect 4 2 11 0;
#X connect 4 2 19 1;
#X connect 10 0 9 0;
#X connect 14 0 13 0;
#X connect 15 0 7 0;
#X connect 15 0 10 0;
#X connect 16 0 3 0;
#X connect 17 0 18 1;
#X connect 17 0 21 1;
#X connect 18 0 24 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 21 0 23 0;
#X connect 23 0 22 0;
#X connect 24 0 22 0;
#X connect 25 0 22 0;
#X connect 26 0 1 0;
#X connect 26 0 25 0;
#X connect 26 1 27 0;
#X connect 27 0 22 0;
#X connect 31 0 30 0;
#X connect 32 0 31 0;
#X connect 32 1 33 0;
#X connect 32 2 35 0;
#X connect 33 0 29 0;
#X connect 33 1 28 0;
#X connect 34 0 35 1;
#X connect 35 0 36 0;
#X connect 36 0 22 0;
#X connect 37 0 32 0;
#X restore 804 419 pd midi_input_for_mapping;
#X obj 478 272 loadbang;
#X obj 475 441 canvasargs;
#X msg 478 403 list \\\$0;
#X obj 478 327 delay 10;
#X text 560 408 append \$0 as argument;
#X obj 478 369 spigot 0;
#X obj 563 319 f \$1;
#X obj 562 344 select 0;
#X msg 560 371 1;
#X obj 478 301 t b b;
#X obj 102 131 bng 15 250 50 0 empty empty <--web-site 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 19 361 pdcontrol;
#X msg 18 335 browse https://github.com/jyg/automatonism-reloaded;
#X obj 745 549 s \$0-target_patch;
#X obj 654 479 route sendcanvas;
#X msg 654 505 sendcanvas clear;
#X obj 645 566 pdcontrol;
#X obj 103 627 spigot 1;
#X obj 145 538 print actiuvedollarzero;
#X obj 10 40 namecanvas \$0-this;
#X obj 10 10 declare -path automatonism/patch_editor_abs;
#X text 111 1372 to do : connect automatonism to pdcontrol object on creation ? no need to \$0 arg;
#X connect 5 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 126 0;
#X connect 11 0 16 0;
#X connect 12 0 13 0;
#X connect 14 0 74 0;
#X connect 15 0 10 0;
#X connect 16 0 77 0;
#X connect 17 0 78 0;
#X connect 18 0 79 0;
#X connect 24 0 25 0;
#X connect 25 0 23 0;
#X connect 43 0 65 0;
#X connect 45 0 145 1;
#X connect 46 0 115 0;
#X connect 50 0 48 0;
#X connect 51 0 85 0;
#X connect 52 0 53 0;
#X connect 52 0 109 0;
#X connect 53 0 51 0;
#X connect 54 0 59 0;
#X connect 59 0 51 0;
#X connect 60 0 59 0;
#X connect 65 0 83 0;
#X connect 67 0 69 0;
#X connect 68 0 66 0;
#X connect 69 0 68 0;
#X connect 69 1 71 0;
#X connect 71 0 70 0;
#X connect 73 0 8 0;
#X connect 74 0 11 0;
#X connect 74 1 75 0;
#X connect 74 2 15 0;
#X connect 75 0 76 0;
#X connect 78 0 18 0;
#X connect 78 1 80 0;
#X connect 80 0 81 0;
#X connect 82 0 145 0;
#X connect 84 0 116 0;
#X connect 85 1 27 0;
#X connect 86 0 88 0;
#X connect 86 1 89 0;
#X connect 87 0 93 0;
#X connect 87 1 122 0;
#X connect 88 0 90 0;
#X connect 89 0 90 1;
#X connect 90 0 91 0;
#X connect 92 0 87 0;
#X connect 93 0 86 0;
#X connect 94 0 93 1;
#X connect 95 0 94 0;
#X connect 96 0 97 0;
#X connect 97 0 91 0;
#X connect 98 0 92 0;
#X connect 104 0 105 0;
#X connect 105 0 92 1;
#X connect 105 0 96 0;
#X connect 109 0 110 0;
#X connect 110 0 111 0;
#X connect 111 0 113 0;
#X connect 111 1 112 0;
#X connect 112 0 108 0;
#X connect 113 0 108 0;
#X connect 114 0 45 0;
#X connect 114 0 146 0;
#X connect 115 0 59 0;
#X connect 116 0 46 0;
#X connect 122 0 125 0;
#X connect 122 1 123 0;
#X connect 123 0 124 0;
#X connect 124 0 125 1;
#X connect 125 0 88 1;
#X connect 125 0 89 1;
#X connect 128 0 137 0;
#X connect 129 0 142 0;
#X connect 130 0 129 0;
#X connect 131 0 133 0;
#X connect 133 0 130 0;
#X connect 134 0 135 0;
#X connect 135 0 136 0;
#X connect 136 0 133 1;
#X connect 137 0 131 0;
#X connect 137 1 134 0;
#X connect 138 0 140 0;
#X connect 140 0 139 0;
#X connect 142 0 143 0;
#X connect 145 0 50 0;
#X coords 0 -1 1 1 250 170 2 97 101;
