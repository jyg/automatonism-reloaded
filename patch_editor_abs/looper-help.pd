#N canvas 0 22 670 591 10;
#X obj 33 335 cnv 15 94 20 empty empty empty 20 12 0 14 #effa00 #373737 0;
#X obj 32 299 cnv 15 94 20 empty empty empty 20 12 0 14 #effa00 #373737 0;
#X obj 31 481 cnv 15 400 30 empty empty OUTPUTS: 20 12 0 14 #9898dc #fcfcfc 0;
#X obj 24 163 cnv 15 400 30 empty empty CONTROLS: 20 12 0 14 #9898dc #fcfcfc 0;
#X obj 30 360 cnv 15 400 30 empty empty INPUTS: 20 12 0 14 #9898dc #fcfcfc 0;
#X obj 20 17 cnv 15 400 30 empty empty LOOPER: 20 12 0 14 #90d4b0 #fcfcfc 0;
#X obj 436 15 looper 0;
#A saved preset statesave/0-looper-ss.txt 0;
#A saved dispatch looper-record-s 0;
#A saved dispatch looper-speed-s 0;
#A saved -rec_mon 0;
#A saved -diskram 0;
#X text 32 196 SPEED - control the playback speed of the recorded loop;
#X text 32 240 ORIGINAL - press the button to get back to the orginal speed of the recording;
#X text 34 414 SPEED - cv input for modulating the SPEED parameter;
#X text 34 434 REC - trigger input to start/stop recording;
#X text 35 454 RESET - trigger input to start the recording from the beginning, f 65;
#X text 20 50 The "LOOPER" module can record signals from your patch and loop them. It works like a live sampler. Press the RECORD toggle to record and stop recording. The recording can be automated by trigger signals at the REC input. The LOOPER can record CV signals as well as audio. By default \, it keeps the last recorded loop in memory when you quit PD \, however when you launch the patch again it needs 5-7 seconds to load the recording., f 66;
#X text 32 218 RECORD - toggle recording on/off;
#X text 32 338 MONITORING - toggle input monitoring ion/off (default on);
#X text 32 275 STOP - press the button to stop playback;
#X text 34 396 IN-L / IN-R - left/right inputs;
#X text 34 515 LEFT / RIGHT - looper left/right channels outputs;
#X text 33 298 SAVE LOOP : If you frequently record microloops and don't need to save the last one \, choose NO to avoid constant drive access, f 66;
